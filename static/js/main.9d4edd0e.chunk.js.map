{"version":3,"sources":["components/cell/cell.js","components/row/row.js","components/modal/modal.js","components/field/field.js","App.js","index.js"],"names":["Cell","_ref","cell","react_default","a","createElement","className","concat","Row","row","map","index","components_cell_cell","key","Modal","gameOver","startGame","onClick","Field","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","createField","height","width","array","y","x","getRandomFigure","randomNumber","Math","floor","random","figures","length","lastRandomNumber","loop","field","includes","pathIndex","currentFigure","figurePath","path","drawFigure","setState","interval","setInterval","moveFigure","speed","handleKeyDown","e","isKeyDown","state","keyCode","moveFigureLeft","moveFigureRight","moveFigureDown","rotateFigure","forEach","figureCoord","canMove","freezeFigure","clearInterval","clearFullRow","rowIndex","getFullRowIndex","i","isRowFull","_this2","document","addEventListener","_this3","canRotate","nextFigurePath","cellIndex","Fragment","components_row_row","modal_modal","React","Component","App","field_field","ReactDOM","render","src_App","getElementById"],"mappings":"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AI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,MAGjC,CAEEA,KAAM,CACJ,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,MAGjC,CAEEA,KAAM,CACJ,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,MAGjC,CAEEA,KAAM,CACJ,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,MAGjC,CAEEA,KAAM,CACJ,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,MAGjC,CAEEA,KAAM,CACJ,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7B,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,OA7DvB3B,mFAqFM,IAAAqD,EAAAlD,KAClBmD,SAASC,iBAAiB,UAAWpD,KAAK+B,eAC1CoB,SAASC,iBAAiB,QAAS,kBAAOF,EAAKjB,WAAY,IAC3DjC,KAAKkB,8CAqIQ,IAAAmC,EAAArD,KACbA,KAAKiC,WAAY,EAEjB,IAAIqB,GAAY,EAChBtD,KAAKuD,eAAiBvD,KAAKsB,cAAcE,KAAKxB,KAAKqB,UAAY,GAC/DrB,KAAKuD,eAAef,QAAQ,SAAAhB,GAC1B,IAAMf,EAAIe,EAAK,GAAK6B,EAAKZ,YAAYhC,EAC/BD,EAAIgB,EAAK,GAAK6B,EAAKZ,YAAYjC,GAEnCC,GAAK4C,EAAKlC,MAAM,GAAGH,QACnBR,GAAK6C,EAAKlC,MAAMH,QACK,IAArBqC,EAAKlC,MAAMX,GAAGC,MAEd6C,GAAY,KAIZA,IACFtD,KAAKqB,UACHrB,KAAKqB,WAAarB,KAAKsB,cAAcE,KAAKR,OAAS,GAC9C,EACDhB,KAAKqB,UAAY,EACvBrB,KAAKuB,WAAavB,KAAKuD,eAEvBvD,KAAKmB,MAAMqB,QAAQ,SAACrD,EAAK2D,GAAN,OACjB3D,EAAIqD,QAAQ,SAAC5D,EAAM4E,GACJ,IAAT5E,IACFyE,EAAKlC,MAAM2B,GAAUU,GAAa,OAIxCxD,KAAKyB,aACLzB,KAAK0B,SAAS,CAAEP,MAAOnB,KAAKmB,0CA2D9B,OACEtC,EAAAC,EAAAC,cAACF,EAAAC,EAAM2E,SAAP,KACE5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZgB,KAAKkC,MAAMf,MAAM/B,IAAI,SAACD,EAAKE,GAAN,OACpBR,EAAAC,EAAAC,cAAC2E,EAAD,CAAK1E,UAAU,MAAMO,IAAKF,EAAOF,IAAKA,OAG1CN,EAAAC,EAAAC,cAAC4E,EAAD,CAAOlE,SAAUO,KAAKkC,MAAMzC,SAAUC,UAAWM,KAAKN,oBAhU1CkE,IAAMC,WCMXC,EARH,WACV,OACEjF,EAAAC,EAAAC,cAACF,EAAAC,EAAM2E,SAAP,KACE5E,EAAAC,EAAAC,cAACgF,EAAD,QCANC,IAASC,OAAOpF,EAAAC,EAAAC,cAACmF,EAAD,MAASf,SAASgB,eAAe","file":"static/js/main.9d4edd0e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './cell.css'\r\n\r\nconst Cell =({cell}) =>{\r\n  return(\r\n    <div className={`cell ${cell === 1 ? 'active': cell === 2? 'freeze':''}`}></div>\r\n  )\r\n}\r\n\r\nexport default Cell","import React from \"react\";\r\nimport Cell from \"../cell/cell\";\r\nimport \"./row.css\";\r\n\r\nconst Row = ({ row }) => {\r\n  return (\r\n    <div className=\"row\">\r\n      {row.map((cell, index) => (\r\n        <Cell key={index} cell={cell} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import React from \"react\";\r\nimport \"./modal.css\";\r\n\r\nconst Modal = ({gameOver,startGame}) => {\r\n \r\n  return (\r\n    <div className={`modal ${gameOver ? 'is-visible':''}`}>\r\n      <p className=\"modal__text\">Game Over</p>\r\n      <button className=\"modal__button\" onClick={startGame}>Restart Game</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport Row from \"../row/row\";\r\nimport \"./field.css\";\r\nimport Modal from \"../modal/modal\";\r\n\r\nclass Field extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      field: [[]],\r\n      gameOver: false\r\n    };\r\n\r\n    this.speed = 800;\r\n    this.field = this.createField(14, 8);\r\n    this.pathIndex = 0;\r\n    this.isKeyDown = true;\r\n    this.figureCoord = { x: 0, y: 0 };\r\n    this.lastRandomNumber = null;\r\n    this.currentFigure = null;\r\n    this.figurePath = null;\r\n    this.figures = [\r\n      {\r\n        // figure: shape-left\r\n        path: [\r\n          [[0, 0], [0, 1], [1, 1], [1, 2]],\r\n          [[1, 0], [2, 0], [0, 1], [1, 1]]\r\n        ]\r\n      },\r\n      {\r\n        // figure: shape-right\r\n        path: [\r\n          [[1, 0], [0, 1], [1, 1], [0, 2]],\r\n          [[0, 0], [1, 0], [1, 1], [2, 1]]\r\n        ]\r\n      },\r\n      {\r\n        // figure: L-reverse\r\n        path: [\r\n          [[0, 0], [1, 0], [2, 0], [2, 1]],\r\n          [[1, 0], [1, 1], [1, 2], [0, 2]],\r\n          [[0, 0], [0, 1], [1, 1], [2, 1]],\r\n          [[0, 0], [1, 0], [0, 1], [0, 2]]\r\n        ]\r\n      },\r\n      {\r\n        // figure: L-normal\r\n        path: [\r\n          [[0, 0], [1, 0], [2, 0], [0, 1]],\r\n          [[0, 0], [1, 0], [1, 1], [1, 2]],\r\n          [[2, 0], [0, 1], [1, 1], [2, 1]],\r\n          [[0, 0], [0, 1], [0, 2], [1, 2]]\r\n        ]\r\n      },\r\n      {\r\n        // figure: line\r\n        path: [\r\n          [[0, 0], [1, 0], [2, 0], [3, 0]],\r\n          [[1, 0], [1, 1], [1, 2], [1, 3]]\r\n        ]\r\n      },\r\n      {\r\n        // figure: T\r\n        path: [\r\n          [[0, 0], [1, 0], [2, 0], [1, 1]],\r\n          [[1, 0], [1, 1], [1, 2], [0, 1]],\r\n          [[1, 0], [0, 1], [1, 1], [2, 1]],\r\n          [[0, 0], [0, 1], [0, 2], [1, 1]]\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n\r\n  createField = (height, width) => {\r\n    let array = [];\r\n    for (let y = 0; y < height; y++) {\r\n      array[y] = [];\r\n      for (let x = 0; x < width; x++) {\r\n        array[y][x] = 0;\r\n      }\r\n    }\r\n    return array;\r\n  };\r\n\r\n  getRandomFigure = () => {\r\n    const randomNumber = Math.floor(Math.random() * this.figures.length);\r\n    if (this.lastRandomNumber === randomNumber) this.getRandomFigure();\r\n    this.lastRandomNumber = randomNumber;\r\n    return this.figures[randomNumber];\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.handleKeyDown);\r\n    document.addEventListener(\"keyup\", () => (this.isKeyDown = true));\r\n    this.loop();\r\n  }\r\n\r\n  loop = () => {\r\n    if (this.field[0].includes(2)) {\r\n      this.gameOver();\r\n      return;\r\n    }\r\n    this.pathIndex = 0;\r\n    this.currentFigure = this.getRandomFigure();\r\n    this.figurePath = this.currentFigure.path[0];\r\n    this.drawFigure();\r\n    this.setState({ field: this.field });\r\n    this.interval = setInterval(this.moveFigure, this.speed);\r\n  };\r\n\r\n  handleKeyDown = e => {\r\n    if (!this.isKeyDown || this.state.gameOver) return;\r\n    switch (e.keyCode) {\r\n      case 37:\r\n        this.moveFigureLeft();\r\n        break;\r\n      case 39:\r\n        this.moveFigureRight();\r\n        break;\r\n      case 40:\r\n        this.moveFigureDown();\r\n        break;\r\n      case 38:\r\n        this.rotateFigure();\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  drawFigure = () => {\r\n    this.figurePath.forEach(path => {\r\n      this.field[path[1] + this.figureCoord.y][\r\n        path[0] + this.figureCoord.x\r\n      ] = 1;\r\n    });\r\n  };\r\n\r\n  moveFigure = () => {\r\n    // check if figure can be moved down\r\n    let canMove = true;\r\n    for (let y = this.field.length - 1; y >= 0; y--) {\r\n      for (let x = 0; x <= this.field[y].length - 1; x++) {\r\n        if (this.field[y][x] === 1) {\r\n          if (y + 1 === this.field.length || this.field[y + 1][x] === 2) {\r\n            canMove = false;\r\n            this.freezeFigure();\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // move a figure down\r\n    if (canMove) {\r\n      this.figureCoord.y++;\r\n      for (let y = this.field.length - 1; y >= 0; y--) {\r\n        for (let x = 0; x <= this.field[y].length - 1; x++) {\r\n          if (this.field[y][x] === 1) {\r\n            this.field[y][x] = 0;\r\n            this.field[y + 1][x] = 1;\r\n          }\r\n        }\r\n      }\r\n      this.setState({ field: this.field });\r\n    }\r\n  };\r\n\r\n  moveFigureLeft = () => {\r\n    this.isKeyDown = false;\r\n    // check if figure can move to left\r\n    let canMove = true;\r\n    for (let x = 0; x <= this.field[1].length - 1; x++) {\r\n      for (let y = 0; y <= this.field.length - 1; y++) {\r\n        if (this.field[y][x] === 1) {\r\n          if (x <= 0 || this.field[y][x - 1] === 2) {\r\n            canMove = false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // move figure to left\r\n    if (canMove) {\r\n      this.figureCoord.x--;\r\n      for (let x = 0; x <= this.field[1].length - 1; x++) {\r\n        for (let y = 0; y <= this.field.length - 1; y++) {\r\n          if (this.field[y][x] === 1) {\r\n            this.field[y][x] = 0;\r\n            this.field[y][x - 1] = 1;\r\n          }\r\n        }\r\n      }\r\n      this.setState({ field: this.field });\r\n    }\r\n  };\r\n\r\n  moveFigureRight = () => {\r\n    this.isKeyDown = false;\r\n    let canMove = true;\r\n    for (let x = this.field[1].length - 1; x >= 0; x--) {\r\n      for (let y = 0; y <= this.field.length - 1; y++) {\r\n        if (this.field[y][x] === 1) {\r\n          if (x >= this.field[1].length - 1 || this.field[y][x + 1] === 2) {\r\n            canMove = false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // move figure to right\r\n    if (canMove) {\r\n      this.figureCoord.x++;\r\n      for (let x = this.field[1].length - 1; x >= 0; x--) {\r\n        for (let y = 0; y <= this.field.length - 1; y++) {\r\n          if (this.field[y][x] === 1) {\r\n            this.field[y][x] = 0;\r\n            this.field[y][x + 1] = 1;\r\n          }\r\n        }\r\n      }\r\n      this.setState({ field: this.field });\r\n    }\r\n  };\r\n\r\n  moveFigureDown = () => {\r\n    this.isKeyDown = false;\r\n    clearInterval(this.interval);\r\n    this.interval = setInterval(this.moveFigure, 10);\r\n  };\r\n\r\n  rotateFigure() {\r\n    this.isKeyDown = false;\r\n    // check if figure has space to rotate\r\n    let canRotate = true;\r\n    this.nextFigurePath = this.currentFigure.path[this.pathIndex + 1];\r\n    this.nextFigurePath.forEach(path => {\r\n      const x = path[0] + this.figureCoord.x;\r\n      const y = path[1] + this.figureCoord.y;\r\n      if (\r\n        x >= this.field[0].length ||\r\n        y >= this.field.length ||\r\n        this.field[y][x] === 2\r\n      ) {\r\n        canRotate = false;\r\n      }\r\n    });\r\n\r\n    if (canRotate) {\r\n      this.pathIndex =\r\n        this.pathIndex >= this.currentFigure.path.length - 2\r\n          ? -1\r\n          : this.pathIndex + 1;\r\n      this.figurePath = this.nextFigurePath;\r\n      // flush cells\r\n      this.field.forEach((row, rowIndex) =>\r\n        row.forEach((cell, cellIndex) => {\r\n          if (cell === 1) {\r\n            this.field[rowIndex][cellIndex] = 0;\r\n          }\r\n        })\r\n      );\r\n      this.drawFigure();\r\n      this.setState({ field: this.field });\r\n    }\r\n  }\r\n\r\n  freezeFigure = () => {\r\n    clearInterval(this.interval);\r\n    for (let y = this.field.length - 1; y >= 0; y--) {\r\n      for (let x = 0; x <= this.field[y].length - 1; x++) {\r\n        if (this.field[y][x] === 1) {\r\n          this.field[y][x] = 2;\r\n        }\r\n      }\r\n    }\r\n    this.figureCoord.x = 0;\r\n    this.figureCoord.y = 0;\r\n    this.setState({ field: this.field });\r\n    this.clearFullRow();\r\n    this.loop();\r\n  };\r\n\r\n  clearFullRow = () => {\r\n    const rowIndex = this.getFullRowIndex();\r\n    if (!rowIndex) return;\r\n    for (let i = rowIndex; i > 0; i--) {\r\n      for (let x = 0; x < this.field[0].length; x++) {\r\n        this.field[i][x] = this.field[i - 1][x];\r\n      }\r\n    }\r\n    this.clearFullRow();\r\n  };\r\n\r\n  getFullRowIndex = () => {\r\n    let isRowFull;\r\n    for (let y = this.field.length - 1; y >= 0; y--) {\r\n      isRowFull = true;\r\n      for (let x = 0; x <= this.field[y].length - 1; x++) {\r\n        if (this.field[y][x] === 0) {\r\n          isRowFull = false;\r\n        }\r\n      }\r\n      if (isRowFull) {\r\n        return y;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  gameOver = () => {\r\n    this.setState({ gameOver: true });\r\n    clearInterval(this.interval);\r\n  };\r\n\r\n  startGame = () => {\r\n    this.setState({ gameOver: false });\r\n    this.field = this.field.map(row => row.map(cell => (cell = 0)));\r\n    this.loop();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"field\">\r\n          {this.state.field.map((row, index) => (\r\n            <Row className=\"row\" key={index} row={row} />\r\n          ))}\r\n        </div>\r\n        <Modal gameOver={this.state.gameOver} startGame={this.startGame} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Field;\r\n","import React from \"react\";\r\nimport Field from \"./components/field/field\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Field />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}